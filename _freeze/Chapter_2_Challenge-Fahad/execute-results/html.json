{
  "hash": "df37627ffa7d9f4020b927ce4daf5378",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Challenge 2 - Supervised ML\"\ndate: \"2020-17-06\"\noutput:\n  html_document:\n    toc: true\n    toc_float: true\n    df_print: paged\n    collapsed: false\n    number_sections: true\n    toc_depth: 3\n    #code_folding: hide\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(parsnip)\nlibrary(recipes)\nlibrary(rsample)\nlibrary(yardstick)\nlibrary(rpart.plot)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_01_linear_lm_simple <- linear_reg(mode = \"regression\") %>%\n  set_engine(\"lm\")\n\nbike_orderlines_tbl <- readRDS(\"C:/Users/Lenovo/OneDrive/Desktop/daqtascience/ss24-bdml-Fahad221999/Business Decisions with Machine Learning/bike_orderlines.rds\")\nbike_orderlines_tbl %>%\nglimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 15,644\nColumns: 18\n$ order_id       <dbl> 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7…\n$ order_line     <dbl> 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1…\n$ order_date     <dttm> 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-0…\n$ model          <chr> \"Spectral CF 7 WMN\", \"Ultimate CF SLX Disc 8.0 ETAP\", \"…\n$ model_year     <dbl> 2021, 2020, 2021, 2019, 2020, 2020, 2020, 2021, 2020, 2…\n$ category_1     <chr> \"Mountain\", \"Road\", \"Mountain\", \"Road\", \"Mountain\", \"Hy…\n$ category_2     <chr> \"Trail\", \"Race\", \"Trail\", \"Triathlon Bike\", \"Dirt Jump\"…\n$ category_3     <chr> \"Spectral\", \"Ultimate\", \"Neuron\", \"Speedmax\", \"Stitched…\n$ price          <dbl> 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n$ quantity       <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1…\n$ total_price    <dbl> 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n$ frame_material <chr> \"carbon\", \"carbon\", \"carbon\", \"carbon\", \"aluminium\", \"c…\n$ weight         <dbl> 13.80, 7.44, 14.06, 8.80, 11.50, 8.80, 8.20, 8.85, 14.4…\n$ url            <chr> \"https://www.canyon.com/en-de/mountain-bikes/trail-bike…\n$ bikeshop       <chr> \"AlexandeRad\", \"AlexandeRad\", \"WITT-RAD\", \"WITT-RAD\", \"…\n$ location       <chr> \"Hamburg, Hamburg\", \"Hamburg, Hamburg\", \"Bremen, Bremen…\n$ lat            <dbl> 53.57532, 53.57532, 53.07379, 53.07379, 48.78234, 48.78…\n$ lng            <dbl> 10.015340, 10.015340, 8.826754, 8.826754, 9.180819, 9.1…\n```\n\n\n:::\n\n```{.r .cell-code}\nbike_features_tbl <- readRDS(\"C:/Users/Lenovo/OneDrive/Desktop/daqtascience/ss24-bdml-Fahad221999/Business Decisions with Machine Learning/bike_features_tbl.rds\")\n\nbike_features_tbl <- bike_features_tbl %>%\n  select(model:url, `Rear Derailleur`, `Shift Lever`) %>%\n  set_names(str_replace_all(names(.), \" |-\", \"_\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(seed = 1113)\nbike_split_obj <- initial_split(bike_features_tbl, strata = category_2)\n\ntrain_tbl <- training(bike_split_obj)\ntest_tbl <- testing(bike_split_obj)\n\nrecipe_obj <- recipe(price ~ ., data = train_tbl) %>%\n  step_rm(url) %>%\n  step_dummy(all_nominal(), one_hot = TRUE)\n  \n\nbikes_wflow <- workflow() %>%\n  add_model(model_01_linear_lm_simple) %>%\n  add_recipe(recipe_obj)\n\nbikes_fit <- bikes_wflow %>%\n  fit(data = train_tbl)\ncalc_metrics <- function(model, new_data = test_tbl) {\n  model %>%\n    predict(new_data = new_data) %>%\n    bind_cols(new_data %>% select(price)) %>%\n    yardstick::metrics(truth = price, estimate = .pred)\n}\n\nbikes_fit %>%\n  calc_metrics()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ! There are new levels in a factor: `Aeroad CF SL Disc 8.0 Di2`, `Aeroad CF SL\n  7.0`, `Aeroad WMN CF SL 8.0`, `Endurace WMN AL Disc 7.0`, `Endurace WMN AL\n  Disc 6.0`, `Endurace CF SLX Disc 9.0 Di2`, `Endurace CF SL Disc 8.0 Pro`,\n  `Endurace CF SL Disc 8.0`, `Endurace WMN CF SL Disc 8.0`, `Endurace CF SL\n  Disc 7.0`, `Endurace CF SL Disc 8.0 Di2`, `Endurace:ON 7.0`, `Inflite CF SL\n  8`, `Speedmax CF SLX 8.0`, `Speedmax WMN CF SLX 8.0 SL`, `Speedmax WMN CF\n  8.0`, `Speedmax CF 8.0 LTD`, `Speedmax CF SLX 8.0 SL`, …, `Roadlite WMN CF\n  7.0`, and `Roadlite CF 7.0`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ! There are new levels in a factor: `E-Road`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ! There are new levels in a factor: `Endurace:ON`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ! There are new levels in a factor: `Campagnolo Potenza 11 GS`, `SRAM Force 1\n  GS`, and `SRAM X01 DH`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: ! There are new levels in a factor: `Shimano XTR M9100 12s`, `Shimano XT\n  M8100`, and `SRAM Apex 11s`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in predict.lm(object = object$fit, newdata = new_data, type =\n\"response\", : prediction from rank-deficient fit; consider predict(.,\nrankdeficient=\"NA\")\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: A correlation computation is required, but the inputs are size zero or one and\nthe standard deviation cannot be computed. `NA` will be returned.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 3\n  .metric .estimator .estimate\n  <chr>   <chr>          <dbl>\n1 rmse    standard         NaN\n2 rsq     standard          NA\n3 mae     standard         NaN\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}